{"ast":null,"code":"var _jsxFileName = \"/home/cero-vengeance/SoftwareLab/SL_Project/frontend/src/components/Reports/Reports.js\";\nimport React from 'react';\nimport '../../styles/Reports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reports() {\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Reset error state\n    setError('');\n    try {\n      // Send a POST request to the backend\n      const response = await fetch('http://127.0.0.1:5000/api/patient/login', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: username,\n          // assuming backend expects \"email\" field\n          password: password\n        })\n      });\n\n      // Check if login was successful\n      if (response.ok) {\n        const data = await response.json();\n\n        // Check if JWT token is provided\n        if (data.access_token) {\n          // Save the access token in localStorage\n          localStorage.setItem('patient_access_token', data.access_token);\n\n          // Redirect to the patient's dashboard\n          setGlobalState(state => {\n            return {\n              ...state,\n              username: \"1\"\n            };\n          });\n          navigate('/patient-dashboard');\n        } else {\n          setError('Login failed. No token received.');\n        }\n      } else {\n        // Handle error response\n        const errorData = await response.json();\n        setError(errorData.message || 'Login failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred. Please try again later.');\n    }\n\n    // Clear input fields after submission\n    setUsername('');\n    setPassword('');\n  };\n  const reports = [{\n    id: 1,\n    name: 'Blood Test Report',\n    date: '2024-10-05',\n    link: '#'\n  }, {\n    id: 2,\n    name: 'X-Ray',\n    date: '2024-09-21',\n    link: '#'\n  }, {\n    id: 3,\n    name: 'MRI Scan',\n    date: '2024-08-15',\n    link: '#'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"reports-list\",\n      children: reports.map(report => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"report-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: report.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [report.name, \" - \", report.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, report.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Reports","handleLogin","e","preventDefault","setError","response","fetch","method","headers","body","JSON","stringify","email","username","password","ok","data","json","access_token","localStorage","setItem","setGlobalState","state","navigate","errorData","message","err","console","error","setUsername","setPassword","reports","id","name","date","link","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","report","href","target","rel","_c","$RefreshReg$"],"sources":["/home/cero-vengeance/SoftwareLab/SL_Project/frontend/src/components/Reports/Reports.js"],"sourcesContent":["import React from 'react';\nimport '../../styles/Reports.css';\n\nfunction Reports() {\n\n\n\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    \n    // Reset error state\n    setError('');\n\n    try {\n      // Send a POST request to the backend\n      const response = await fetch('http://127.0.0.1:5000/api/patient/login', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: username,  // assuming backend expects \"email\" field\n          password: password,\n        }),\n      });\n\n      // Check if login was successful\n      if (response.ok) {\n        const data = await response.json();\n\n        // Check if JWT token is provided\n        if (data.access_token) {\n          // Save the access token in localStorage\n          localStorage.setItem('patient_access_token', data.access_token);\n\n          // Redirect to the patient's dashboard\n          setGlobalState((state)=>{\n              return {\n                  ...state, username: \"1\"\n              }\n          })\n          navigate('/patient-dashboard');\n        } else {\n          setError('Login failed. No token received.');\n        }\n      } else {\n        // Handle error response\n        const errorData = await response.json();\n        setError(errorData.message || 'Login failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred. Please try again later.');\n    }\n\n    // Clear input fields after submission\n    setUsername('');\n    setPassword('');\n  };\n  \n  const reports = [\n    { id: 1, name: 'Blood Test Report', date: '2024-10-05', link: '#' },\n    { id: 2, name: 'X-Ray', date: '2024-09-21', link: '#' },\n    { id: 3, name: 'MRI Scan', date: '2024-08-15', link: '#' },\n  ];\n\n  return (\n    <div className=\"reports-container\">\n      <h2>Your Reports</h2>\n      <ul className=\"reports-list\">\n        {reports.map((report) => (\n          <li key={report.id} className=\"report-item\">\n            <a href={report.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {report.name} - {report.date}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}