{"ast":null,"code":"var _jsxFileName = \"/home/sharath/Documents/CS699/final_project/Final Project/frontend/src/components/Dashboard/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard-title\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard-button\",\n        onClick: () => navigate('/admin-dashboard/manage-doctors') // Updated URL for Manage Doctors section\n        ,\n        children: \"Manage Doctorsid = db.Column(db.Integer, primary_key=True) doctor_id = db.Column(db.Integer, db.ForeignKey('doctors.id'), nullable=False) patient_id = db.Column(db.Integer, db.ForeignKey('patients.id'), nullable=False) appointment_date = db.Column(db.DateTime, nullable=True)  # Date and time of the appointment status = db.Column(db.String(50), default=\\\"requested\\\")  # Status: scheduled, completed, canceled, etc. notes = db.Column(db.Text, nullable=True)  # Additional notes for the appointment scans = db.Column(db.String(200), nullable=True)  # Path or filename for scans related to the appointment reports = db.Column(db.String(200), nullable=True)  # Path or filename for reports related to the appointment priority_score=db.Column(db.Integer,nullable=True) queue_duration=db.Column(db.Integer,nullable=True)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard-button\",\n        onClick: () => navigate('/patient-assignment'),\n        children: \"Patient Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard-button\",\n        onClick: () => navigate('/view-statistics'),\n        children: \"View Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/sharath/Documents/CS699/final_project/Final Project/frontend/src/components/Dashboard/AdminDashboard.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles/Dashboard.css';\n\nfunction AdminDashboard() {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"dashboard\">\n      <h2 className=\"dashboard-title\">Admin Dashboard</h2>\n      <div className=\"dashboard-buttons\">\n        <button \n          className=\"dashboard-button\" \n          onClick={() => navigate('/admin-dashboard/manage-doctors')} // Updated URL for Manage Doctors section\n        >\n          Manage Doctorsid = db.Column(db.Integer, primary_key=True)\n    doctor_id = db.Column(db.Integer, db.ForeignKey('doctors.id'), nullable=False)\n    patient_id = db.Column(db.Integer, db.ForeignKey('patients.id'), nullable=False)\n    appointment_date = db.Column(db.DateTime, nullable=True)  # Date and time of the appointment\n    status = db.Column(db.String(50), default=\"requested\")  # Status: scheduled, completed, canceled, etc.\n    notes = db.Column(db.Text, nullable=True)  # Additional notes for the appointment\n    scans = db.Column(db.String(200), nullable=True)  # Path or filename for scans related to the appointment\n    reports = db.Column(db.String(200), nullable=True)  # Path or filename for reports related to the appointment\n    priority_score=db.Column(db.Integer,nullable=True)\n    queue_duration=db.Column(db.Integer,nullable=True)\n        </button>\n        <button \n          className=\"dashboard-button\" \n          onClick={() => navigate('/patient-assignment')}\n        >\n          Patient Assignment\n        </button>\n        <button \n          className=\"dashboard-button\" \n          onClick={() => navigate('/view-statistics')}\n        >\n          View Statistics\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,oBACEE,OAAA;IAAKI,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBL,OAAA;MAAII,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDT,OAAA;MAAKI,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCL,OAAA;QACEI,SAAS,EAAC,kBAAkB;QAC5BM,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC,iCAAiC,CAAE,CAAC;QAAA;QAAAE,QAAA,EAC7D;MAWD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTT,OAAA;QACEI,SAAS,EAAC,kBAAkB;QAC5BM,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC,qBAAqB,CAAE;QAAAE,QAAA,EAChD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTT,OAAA;QACEI,SAAS,EAAC,kBAAkB;QAC5BM,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC,kBAAkB,CAAE;QAAAE,QAAA,EAC7C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACP,EAAA,CArCQD,cAAc;EAAA,QACJH,WAAW;AAAA;AAAAa,EAAA,GADrBV,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}