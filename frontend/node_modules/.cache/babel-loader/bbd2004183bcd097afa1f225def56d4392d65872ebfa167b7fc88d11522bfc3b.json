{"ast":null,"code":"var _jsxFileName = \"/home/cero-vengeance/SoftwareLab/SL_Project/frontend/src/components/Admin/DoctorList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../../styles/DoctorList.css'; // Ensure you create and customize this CSS file for styling.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorList() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Fetch all doctors and their specializations\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const token = localStorage.getItem('admin_access_token'); // Replace with the appropriate token key\n        if (!token) {\n          setMessage('You are not authenticated. Please log in.');\n          return;\n        }\n        const response = await fetch('http://127.0.0.1:5000/api/doctors', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}` // Add the JWT token for admin authentication\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setDoctors(data.doctors);\n        } else {\n          const errorData = await response.json();\n          setMessage(errorData.message || 'Failed to fetch doctors.');\n        }\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n        setMessage('An error occurred. Please try again later.');\n      }\n    };\n    fetchDoctors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctors-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list-title\",\n      children: \"List of Doctors and Their Specializations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"doctors-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sl. No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Specialization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.specialization || 'Not Specified'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, doctor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-doctors\",\n      children: \"No doctors available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorList, \"XNFO50pPKIL6YuBCzgPdlZe2B5c=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","message","setMessage","fetchDoctors","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","data","json","errorData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","doctor","index","name","specialization","email","id","_c","$RefreshReg$"],"sources":["/home/cero-vengeance/SoftwareLab/SL_Project/frontend/src/components/Admin/DoctorList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../../styles/DoctorList.css'; // Ensure you create and customize this CSS file for styling.\n\nfunction DoctorList() {\n  const [doctors, setDoctors] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Fetch all doctors and their specializations\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const token = localStorage.getItem('admin_access_token'); // Replace with the appropriate token key\n        if (!token) {\n          setMessage('You are not authenticated. Please log in.');\n          return;\n        }\n\n        const response = await fetch('http://127.0.0.1:5000/api/doctors', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`, // Add the JWT token for admin authentication\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setDoctors(data.doctors);\n        } else {\n          const errorData = await response.json();\n          setMessage(errorData.message || 'Failed to fetch doctors.');\n        }\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n        setMessage('An error occurred. Please try again later.');\n      }\n    };\n\n    fetchDoctors();\n  }, []);\n\n  return (\n    <div className=\"doctors-list\">\n      <h2 className=\"list-title\">List of Doctors and Their Specializations</h2>\n      {message && <p className=\"message\">{message}</p>}\n      {doctors.length > 0 ? (\n        <table className=\"doctors-table\">\n          <thead>\n            <tr>\n              <th>Sl. No.</th>\n              <th>Doctor Name</th>\n              <th>Specialization</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {doctors.map((doctor, index) => (\n              <tr key={doctor.id}>\n                <td>{index + 1}</td>\n                <td>{doctor.name}</td>\n                <td>{doctor.specialization || 'Not Specified'}</td>\n                <td>{doctor.email}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <div className=\"no-doctors\">No doctors available.</div>\n      )}\n    </div>\n  );\n}\n\nexport default DoctorList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}