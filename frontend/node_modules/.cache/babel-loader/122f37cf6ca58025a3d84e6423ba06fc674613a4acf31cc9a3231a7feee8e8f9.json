{"ast":null,"code":"var _jsxFileName = \"/home/cero-vengeance/SoftwareLab/SL_Project/frontend/src/components/Auth/Login/PatientLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../../styles/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientLogin() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    globalState,\n    setGlobalState\n  } = useContext(globalContext);\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Reset error state\n    setError('');\n    try {\n      // Send a POST request to the backend\n      const response = await fetch('http://127.0.0.1:5000/api/patient/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: username,\n          // assuming backend expects \"email\" field\n          password: password\n        })\n      });\n\n      // Check if login was successful\n      if (response.ok) {\n        const data = await response.json();\n\n        // Check if JWT token is provided\n        if (data.access_token) {\n          // Save the access token in localStorage\n          localStorage.setItem('patient_access_token', data.access_token);\n\n          // Redirect to the patient's dashboard\n          navigate('/patient-dashboard');\n        } else {\n          setError('Login failed. No token received.');\n        }\n      } else {\n        // Handle error response\n        const errorData = await response.json();\n        setError(errorData.message || 'Login failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred. Please try again later.');\n    }\n\n    // Clear input fields after submission\n    setUsername('');\n    setPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-button\",\n        onClick: () => navigate('/'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2190 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Patient Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signup-note\",\n          children: [\"Don\\u2019t have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/patient-signup\",\n            children: \"Sign up here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 36\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientLogin, \"ivoDXMfx1L4Mu6aTw9y+QEf34gw=\", false, function () {\n  return [useNavigate];\n});\n_c = PatientLogin;\nexport default PatientLogin;\nvar _c;\n$RefreshReg$(_c, \"PatientLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PatientLogin","_s","username","setUsername","password","setPassword","error","setError","navigate","globalState","setGlobalState","useContext","globalContext","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","ok","data","json","access_token","localStorage","setItem","errorData","message","err","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","href","_c","$RefreshReg$"],"sources":["/home/cero-vengeance/SoftwareLab/SL_Project/frontend/src/components/Auth/Login/PatientLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../../styles/login.css';\n\nfunction PatientLogin() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {globalState, setGlobalState} = useContext(globalContext)\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    \n    // Reset error state\n    setError('');\n\n    try {\n      // Send a POST request to the backend\n      const response = await fetch('http://127.0.0.1:5000/api/patient/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: username,  // assuming backend expects \"email\" field\n          password: password,\n        }),\n      });\n\n      // Check if login was successful\n      if (response.ok) {\n        const data = await response.json();\n\n        // Check if JWT token is provided\n        if (data.access_token) {\n          // Save the access token in localStorage\n          localStorage.setItem('patient_access_token', data.access_token);\n\n          // Redirect to the patient's dashboard\n          navigate('/patient-dashboard');\n        } else {\n          setError('Login failed. No token received.');\n        }\n      } else {\n        // Handle error response\n        const errorData = await response.json();\n        setError(errorData.message || 'Login failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred. Please try again later.');\n    }\n\n    // Clear input fields after submission\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-container\">\n        <button className=\"home-button\" onClick={() => navigate('/')}><span>&larr; </span></button>\n        <form className=\"login-form\" onSubmit={handleLogin}>\n          <h2>Patient Login</h2>\n          {error && <p className=\"error-message\">{error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button type=\"submit\">Login</button>\n          <p className=\"signup-note\">\n            Donâ€™t have an account? <a href=\"/patient-signup\">Sign up here</a>.\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PatientLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}